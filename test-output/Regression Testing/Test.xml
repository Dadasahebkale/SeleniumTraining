<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="8" hostname="Oviya" failures="2" tests="2" name="Test" time="0.341" errors="0" timestamp="2023-06-03T04:04:21 IST">
  <testcase classname="com.dk.testcases.VerifyTitleOfByAutomation" name="getBymatAutomationTitletest" time="0.287">
    <failure type="java.lang.NoSuchMethodError" message="&amp;apos;com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)&amp;apos;">
      <![CDATA[java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'
at org.openqa.selenium.chrome.AddHasCasting.getAdditionalCommands(AddHasCasting.java:38)
at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.getExtraCommands(ChromeDriver.java:116)
at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.<init>(ChromeDriver.java:111)
at org.openqa.selenium.chrome.ChromeDriver.generateExecutor(ChromeDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:73)
at com.dk.basetest.TestBase.getDriver(TestBase.java:80)
at com.dk.listeners.Listeners.onTestStart(Listeners.java:15)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 15 stack frames]]>
    </failure>
  </testcase> <!-- getBymatAutomationTitletest -->
  <testcase classname="com.dk.testcases.VerifyTitleOfByAutomation" name="getBymatAutomationTitletest" time="0.3">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)&amp;quot; because &amp;quot;com.dk.listeners.Listeners.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "com.dk.listeners.Listeners.test" is null
at com.dk.listeners.Listeners.onTestFailure(Listeners.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 15 stack frames]]>
    </failure>
  </testcase> <!-- getBymatAutomationTitletest -->
  <testcase classname="com.dk.basetest.TestBase" name="@BeforeSuite setUP" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUP -->
  <testcase classname="com.dk.basetest.TestBase" name="@BeforeSuite setUP" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUP -->
  <testcase classname="com.dk.basetest.TestBase" name="@BeforeSuite setUP" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUP -->
  <testcase classname="com.dk.basetest.TestBase" name="@BeforeSuite setUP" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUP -->
  <testcase classname="com.dk.basetest.TestBase" name="@AfterSuite endTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite endTest -->
  <testcase classname="com.dk.basetest.TestBase" name="@AfterSuite endTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite endTest -->
  <testcase classname="com.dk.basetest.TestBase" name="@AfterSuite endTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite endTest -->
  <testcase classname="com.dk.basetest.TestBase" name="@AfterSuite endTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite endTest -->
</testsuite> <!-- Test -->
